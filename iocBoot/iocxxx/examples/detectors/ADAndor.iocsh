#- INSTANCE  - Used for Camera Port Name and detector pv name
#- INSTALL_PATH - camera path, default = ""
#- SERIAL       - camera serial number, default = 0
#- XSIZE     - Image Width
#- YSIZE     - Image Height
#- TYPE      - Image Datatype, default: Int16
#- FTVL      - Waveform type, default: SHORT

epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(EPICS_DB_INCLUDE_PATH):$(ADCORE)/db:$(ADANDOR)/db")

#- andorCCDConfig(const char *portName, const char *installPath, int cameraSerial, int shamrockID,
#-                int maxBuffers, size_t maxMemory, int priority, int stackSize)
andorCCDConfig("$(INSTANCE)", "$(INSTALL_PATH='')", $(SERIAL), 0, 0, 0, 0, 0)
dbLoadRecords("$(ADANDOR)/db/andorCCD.template",   "P=$(PREFIX)$(INSTANCE):,R=cam1:,PORT=$(INSTANCE),ADDR=0,TIMEOUT=1")

#Create a standard arrays plugin, set it to get data from first simDetector driver.
NDStdArraysConfigure("$(INSTANCE)Image", 3, 0, "$(INSTANCE)", 0, 2000000)
luaCmd("dbLoadRecords('$(ADCORE)/ADApp/Db/NDStdArrays.template', 'P=$(PREFIX):,R=image1:,PORT=$(INSTANCE)Image,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(INSTANCE),TYPE=$(TYPE=Int8),FTVL=$(FTVL=UCHAR),NELEMENTS=' .. tostring((XSIZE*YSIZE)|0) )", "XSIZE=$(XSIZE),YSIZE=$(YSIZE)")

iocshLoad("$(ADCORE)/iocBoot/commonPlugins.cmd", "PREFIX=$(PREFIX), PORT=$(INSTANCE), QSIZE=20, XSIZE=$(XSIZE), YSIZE=$(YSIZE), NCHANS=1024, CBUFFS=20, MAX_THREADS=5")

set_requestfile_path("$(ADANDOR)/db")
