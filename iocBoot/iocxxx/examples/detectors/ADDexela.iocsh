#- INSTANCE  - Used for Camera Port Name and detector pv name
#- ID        - Detector Index, default: 0
#- XSIZE     - Image Width
#- YSIZE     - Image Height
#- TYPE      - Image Datatype, default: Int16
#- FTVL      - Waveform type, default: SHORT

epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(EPICS_DB_INCLUDE_PATH):$(ADCORE)/db:$(ADDEXELA)/db")

#- Create a Dexels driver
#- DexelaConfig(const char *portName, detIndex, maxBuffers, size_t maxMemory, int priority, int stackSize)

#- This is for the first detector in the system
DexelaConfig("$(INSTANCE)", $(ID), 0, 0, 0, 0)

dbLoadRecords("$(ADDEXELA)/db/Dexela.template", "P=$(PREFIX)$(INSTANCE):,R=cam1:,PORT=$(INSTANCE),ADDR=0,TIMEOUT=1")

# Create a standard arrays plugin, set it to get data from Driver.
NDStdArraysConfigure("Image1", 3, 0, "$(PORT)", 0)

#Create a standard arrays plugin, set it to get data from first simDetector driver.
NDStdArraysConfigure("$(INSTANCE)Image", 3, 0, "$(INSTANCE)", 0, 2000000)
luaCmd("dbLoadRecords('$(ADCORE)/ADApp/Db/NDStdArrays.template', 'P=$(PREFIX)$(INSTANCE):,R=image1:,PORT=$(INSTANCE)Image,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(INSTANCE),TYPE=$(TYPE=Int16),FTVL=$(FTVL=SHORT),NELEMENTS=' .. NELM)", "NELM=$(XSIZE)*$(YSIZE)")

iocshLoad("$(ADCORE)/iocBoot/commonPlugins.cmd", "PREFIX=$(PREFIX)$(INSTANCE):, PORT=$(INSTANCE), QSIZE=20, XSIZE=$(XSIZE), YSIZE=$(YSIZE), NCHANS=1024, CBUFFS=20, MAX_THREADS=5")

set_requestfile_path("$(ADDEXELA)/db")
