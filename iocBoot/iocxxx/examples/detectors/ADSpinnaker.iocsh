#- INSTANCE  - Used for Camera Port Name and detector pv name
#- ID        - Camera ID
#- DB_FILE   - Genicam DB File
#- XSIZE     - Image Width
#- YSIZE     - Image Height
#- TYPE      - Image Datatype, default: Int16
#- FTVL      - Waveform type, default: SHORT
#- COLORS    - Number of colors, default: 1

epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(EPICS_DB_INCLUDE_PATH):$(ADCORE)/db:$(ADSPINNAKER)/db")


# ADSpinnakerConfig(const char *portName, const char *cameraId, int numSPBuffers,
#                   size_t maxMemory, int priority, int stackSize)
ADSpinnakerConfig("$(INSTANCE)", $(ID))

# Main database.  This just loads and modifies ADBase.template
dbLoadRecords("$(ADSPINNAKER)/db/spinnaker.template", "P=$(PREFIX)$(INSTANCE):,R=cam1:,PORT=$(INSTANCE)")

# Load the autogenerated file of GenICam features
dbLoadRecords("$(DB_FILE)", "P=$(PREFIX)$(INSTANCE):,R=cam1:,PORT=$(INSTANCE)")

#Create a standard arrays plugin, set it to get data from first simDetector driver.
NDStdArraysConfigure("$(INSTANCE)Image", 3, 0, "$(INSTANCE)", 0, 2000000)
luaCmd("dbLoadRecords('$(ADCORE)/ADApp/Db/NDStdArrays.template', 'P=$(PREFIX)$(INSTANCE):,R=image1:,PORT=$(INSTANCE)Image,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(INSTANCE),TYPE=$(TYPE=Int16),FTVL=$(FTVL=SHORT),NELEMENTS=' .. NELM)", "NELM=$(COLORS)*$(XSIZE)*$(YSIZE)")

iocshLoad("$(ADCORE)/iocBoot/commonPlugins.cmd", "PREFIX=$(PREFIX)$(INSTANCE):, PORT=$(INSTANCE), QSIZE=20, XSIZE=$(XSIZE), YSIZE=$(YSIZE), NCHANS=1024, CBUFFS=20, MAX_THREADS=5")

set_requestfile_path("$(ADGENICAM)/db")
set_requestfile_path("$(ADSPINNAKER)/db")
