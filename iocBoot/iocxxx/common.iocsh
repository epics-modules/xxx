### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC)")
iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
iocshLoad("$(AUTOSAVE)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")

#- Note that you can restore a .sav file without also autosaving to it.
#set_pass0_restoreFile("octupole_settings.sav")
#set_pass1_restoreFile("octupole_settings.sav")

###
# Setup search path for .req files. Include the db folders of every module specified in RELEASE
luaCmd("modules=require('modules'); for mod,path in pairs(modules) do set_requestfile_path(path .. '/db') end")


# Debug-output level
save_restoreSet_Debug(0)

# Access Security
#dbLoadRecords("$(TOP)/db/Security_Control.db","P=$(PREFIX)")
#asSetFilename("$(TOP)/iocBoot/accessSecurity.acf")
#asSetSubstitutions("P=$(PREFIX)")

### caputRecorder
iocshLoad("$(CAPUTRECORDER)/iocsh/caputRecorder.iocsh", "PREFIX=$(PREFIX)")

### Scan-support software
iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
#- You could make scan configurations read-only:
#dbLoadRecords("$(AUTOSAVE)/db/configMenu.db","P=$(PREFIX),CONFIG=scan1,ENABLE_SAVE=0")

### Stuff for user programming ###
iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")

#- Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")

#- Load 20 userScripts
dbLoadRecords("$(LUA)/db/luascripts10.db", "P=$(PREFIX), R=set1:")
dbLoadRecords("$(LUA)/db/luascripts10.db", "P=$(PREFIX), R=set2:")

#- string sequence (sseq) records
iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")

#- interpolation
dbLoadRecords("$(CALC)/db/interp.db", "P=$(PREFIX),N=2000")
dbLoadRecords("$(CALC)/db/interpNew.db", "P=$(PREFIX),Q=1,N=2000")

#- busy record
dbLoadRecords("$(BUSY)/db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
dbLoadRecords("$(BUSY)/db/busyRecord.db", "P=$(PREFIX),R=mybusy2")

#- Soft function generator
#dbLoadRecords("$(CALC)/db/FuncGen.db","P=$(PREFIX),Q=fgen,OUT=$(PREFIX)m7.VAL")

### Load database record for alive heartbeating support.
#- IOCNM is name of IOC, RHOST specifies the remote server accepting hearbeats
dbLoadRecords("$(ALIVE)/db/alive.db", "P=$(PREFIX),IOCNM=$(IOC),RHOST=164.54.100.11")
dbLoadRecords("$(ALIVE)/db/aliveMSGCalc.db", "P=$(PREFIX)")

### Load PVAlive
dbLoadTemplate("substitutions/PVAlive.substitutions", "P=$(PREFIX)")

#- A set of scan parameters for each positioner.  This is a convenience
#- for the user.  It can contain an entry for each scannable thing in the
#- crate.
#dbLoadTemplate("substitutions/scanParms.substitutions", "P=$(PREFIX)")
